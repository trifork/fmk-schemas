properties([
    parameters([
        choice(
            name: 'snitflade',
            choices: [
                'Advis',
                '2013_01_01',
                'M*2015_01_01',
                'E*2015_01_01',
                'P*2015_01_01',
                'M*2015_01_01_E1',
                'P*2015_01_01_E1',
                'M*2015_01_01_E2',
                'P*2015_01_01_E2',
                'E*2015_01_01_E2',
                'M*2015_01_01_E4',
                'M*2015_01_01_E5',
                'P*2015_01_01_E5',
                'E*2015_01_01_E5',
                'M*2015_06_01',
                'P*2015_06_01',
                'M*2015_06_01_E2',
                'P*2015_06_01_E2',
                'M*2015_06_01_E3',
                'M*2015_06_01_E5',
                'P*2015_06_01_E5',
                'M*2015_06_01_E6',
                '2019_09_01',
                'M*2022_01_01',
                'P*2022_01_01',
                'OrdinationsAI*_2022_03_01'
            ].join('\n')
            ,
            description: '''
                Kopierer den valgte snitflade til github.com/trifork/FMKResources. fmk.wiki udpeger disse ressourcer<br/>
                <br/>
                Advis -> Advis<br/>
                dumpRestore -> 2013_01_01<br/>
                dumpRestore2019 -> 2019_09_01<br/>
                ordinationsAI -> 2022_03_01<br/>
                1.4.4 -> 2015_01_01 (opdaterer også E1)<br/>
                1.4.4_E1 -> 2015_01_01_E1<br/>
                1.4.4_E2 -> 2015_01_01_E2<br/>
                1.4.4_E4 -> 2015_01_01_E4<br/>
                1.4.4_E5 -> 2015_01_01_E5<br/>
                1.4.6 -> 2015_06_01<br/>
                1.4.6_E1 -> 2015_06_01_E1<br/>
                1.4.6_E2 -> 2015_06_01_E2<br/>
                1.4.6_E3 -> 2015_06_01_E3<br/>
                1.4.6_E5 -> 2015_06_01_E5<br/>
                1.4.6_E6 -> 2015_06_01_E6<br/>
                1.6.0    -> 2022_01_01<br/>
                <br/>
                Man releaser snitfladerne Medicinkortet, EffectuationOrdering og Patient(Organisation)Registration særskilt. 
                Dette gøres ved at vælge mellem hhv M*<I>snitflade</I>, E*<I>snitflade</I>, P*<I>snitflade</I>
            '''
        )
    ])
])


pipeline {
    agent any
    /*agent {
        node {
            label ''
            customWorkspace '/var/jenkins_home/jobs/FMK_schema/master/workspace'
        }
    }*/

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                checkout([$class: 'GitSCM', branches: [[name: "*/master"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'FMKResources']], submoduleCfg: [], userRemoteConfigs: [[url: 'git@github.com:trifork/FMKResources.git',credentialsId: 'github-app-FMK']]])
            }
        }

        stage('Copy Archive') {
            steps {
                script {
                    snitflade = snitflade.trim()
                    currentBuild.description = "${snitflade}"
                    try{
                        step ([$class: 'CopyArtifact',
                               projectName: '/FMK_schema/master',
                               selector: [
                                 $class: 'StatusBuildSelector',
                                 stable: false
                               ],
                               filter: "**/target/*${snitflade}*.zip",
                               target: 'FMKResources/wsdl',
                               flatten: true]);
                    }
                    catch(exception) {
                        //sh "echo CopyArtifact zip failed ${exception.toString()}"
                        def sw = new StringWriter()
                        def pw = new PrintWriter(sw)
                        exception.printStackTrace(pw)
                        echo sw.toString()
                    }
                    try {
                        step([$class     : 'CopyArtifact',
                              projectName: '/FMK_schema/master',
                              selector   : [
                                $class: 'StatusBuildSelector',
                                stable: false
                              ],
                              filter     : "**/target/resources/wsdl/*${snitflade}*.wsdl",
                              target     : 'FMKResources/tmp',
                              flatten    : true]);
                    }
                    catch(exception) {
                        sh "echo CopyArtifact wsdl failed ${exception.toString()}"
                        def sw = new StringWriter()
                        def pw = new PrintWriter(sw)
                        exception.printStackTrace(pw)
                        echo sw.toString()
                    }
                }
            }
        }

        stage('build') {
            steps {
                script {
                    String jenkinsUserId = sh(returnStdout: true, script: 'id -u jenkins').trim()
                    String dockerGroupId = sh(returnStdout: true, script: 'getent group docker | cut -d: -f3').trim()
                    String containerUserMapping = "-u $jenkinsUserId:$dockerGroupId "
                    docker.image("registry.fmk.netic.dk/fmk/fmkbuilder:11").inside(containerUserMapping) {
                        sh "echo ${snitflade} valgt"

                        sh '''
                            cd FMKResources/tmp
                            for f in *.wsdl
                            do
                                zip $f.zip $f
                                rm $f
                            done
                            cd ..
                            mv tmp/* wsdl/.
                            rm -r tmp
                            cd wsdl
                            md5sum *.zip > latest_md5
                            cd ..
                            git add *
                            git config user.email "jenkins@trifork.com"
                            git config user.name "jenkins"
                            '''
                        sh "cd FMKResources && git commit -a -m release_${snitflade}"
                    }
                }
            }
        }
    }

    post {
        success {
            withCredentials([gitUsernamePassword(credentialsId: 'github-app-FMK', gitToolName: 'Default')]) {
                script {
                    sh 'cd FMKResources && git push origin HEAD:master'
                    build job: 'FMK_publish_interfacedoc', wait:false, parameters: [string(name: 'snitflade', value: "${snitflade}")]
                }
            }
        }
        failure {
            emailext body: '$DEFAULT_CONTENT',
                    recipientProviders: [culprits(), requestor()],
                    subject: '$DEFAULT_SUBJECT'
        }
        unstable {
            emailext body: '$DEFAULT_CONTENT',
                    recipientProviders: [culprits(), requestor()],
                    subject: '$DEFAULT_SUBJECT'
        }
        fixed {
            emailext body: '$DEFAULT_CONTENT',
                    recipientProviders: [culprits(), requestor()],
                    subject: '$DEFAULT_SUBJECT'
        }
    }
}