def withDockerNetwork(Closure inner) {
    def networkId = "empty"
    try {
        networkId = env.JOB_NAME + "_" + UUID.randomUUID().toString()
        sh "echo ${networkId}"
        sh "docker network create --ipv6 ${networkId}"
        inner.call(networkId)
    } finally {
        sh "echo removing ${networkId}"
        sh "docker network rm ${networkId}"
    }
}

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                //todo change to master once merged
                checkout([$class: 'GitSCM', branches: [[name: "*/${env.branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'fmk-schemas']], submoduleCfg: [], userRemoteConfigs: [[url: 'git@github.com:trifork/fmk-schemas.git']]])
            }
        }

        stage('build') {
            steps {
                script {
                    String jenkinsUserId = sh(returnStdout: true, script: 'id -u jenkins').trim()
                    String dockerGroupId = sh(returnStdout: true, script: 'getent group docker | cut -d: -f3').trim()
                    String containerUserMapping = "-u $jenkinsUserId:$dockerGroupId "

                    withDockerNetwork { n ->
                        docker.image("registry.fmk.netic.dk/fmk/fmkbuilder:11").inside(containerUserMapping + "--add-host archive.ubuntu.com:2001:67c:1562::15 --add-host test1-ecpr2.fmk.netic.dk:2a03:dc80:0:f12d::170 --add-host f.aia.systemtest19.trust2408.com:2a03:dc80:0:f12d::120 --add-host nodejs.org:2400:cb00:2048:1::6814:172e --add-host registry.bower.io:2400:cb00:2048:1::6818:69ac --add-host registry.npmjs.org:2606:4700::6810:1923 --add-host f.aia.ica02.trust2408.com:2a03:dc80:0:f12d::120 --network ${n}  -e _JAVA_OPTIONS='-Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Stack=true -Djava.net.preferIPv6Addresses=true' -v $HOME/.m2:/home/jenkins/.m2") {
                            configFileProvider([configFile(fileId: 'trifork-ci-fmk-settings', variable: 'MAVEN_SETTINGS')]) {
                                sh "cd fmk-schemas && mvn -s $MAVEN_SETTINGS deploy"
                            }
                        }
                    }
                    archiveArtifacts 'fmk-schemas/mc160_wsdl/target/*.zip, fmk-schemas/mc160idws_wsdl/target/*.zip, fmk-schemas/mc160_wsdl/target/resources/wsdl/*.wsdl, fmk-schemas/mc160idws_wsdl/target/resources/wsdl/*.wsdl'
                }
            }
        }
    }

    post {
        failure {
            emailext body: '$DEFAULT_CONTENT',
                    recipientProviders: [culprits(), requestor()],
                    subject: '$DEFAULT_SUBJECT'
        }
        unstable {
            emailext body: '$DEFAULT_CONTENT',
                    recipientProviders: [culprits(), requestor()],
                    subject: '$DEFAULT_SUBJECT'
        }
        fixed {
            emailext body: '$DEFAULT_CONTENT',
                    recipientProviders: [culprits(), requestor()],
                    subject: '$DEFAULT_SUBJECT'
        }
    }
}