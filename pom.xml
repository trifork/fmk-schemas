<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dk.medicinkortet</groupId>
    <artifactId>medicinkortet-schema</artifactId>
    <version>${revision}</version>

    <name>schema</name>
    <packaging>pom</packaging>
    <modules>
        <module>SchemaLoader</module>
        <module>mc160_wsdl</module>
        <module>mc160idws_wsdl</module>
        <module>fmk-160-schema-classes</module>
        <module>fmk-160-idws-schema-classes</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.release>11</maven.compiler.release>
        <revision>1.0.17-SNAPSHOT</revision>
    </properties>

    <repositories>
        <repository>
            <id>trifork-internal</id>
            <name>Trifork internal Nexus</name>
            <url>https://ci.fmk.netic.dk/nexus/repository/trifork-internal/</url>
        </repository>
        <repository>
            <id>trifork-public</id>
            <name>Trifork public Nexus</name>
            <url>https://ci.fmk.netic.dk/nexus/repository/public/</url>
        </repository>
        <repository>
            <id>trifork.snapshots</id>
            <name>Trifork internal snapshot Nexus</name>
            <url>https://ci.fmk.netic.dk/nexus/repository/snapshots/</url>
        </repository>
        <repository>
            <id>nsp</id>
            <name>NSP</name>
            <url>https://nexus.nspop.dk/nexus/repository/releases/</url>
        </repository>
    </repositories>

    <distributionManagement>
        <snapshotRepository>
            <id>trifork.snapshots</id>
            <name>Trifork internal snapshot Nexus</name>
            <url>https://ci.fmk.netic.dk/nexus/repository/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>trifork.internal</id>
            <name>Trifork internal Nexus</name>
            <url>https://ci.fmk.netic.dk/nexus/repository/trifork-internal/</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.7.3</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>tmp</dir>
                            <stylesheet>src/dk/medicinkortet/xmlschema/fmkdoc.xsl</stylesheet>
                            <outputDir>tmp</outputDir>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>$</pattern>
                                    <replacement>.html</replacement>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <source><![CDATA[
                        def maxMessageLength = 2500000
                        println("Uploading ${properties['infile']}")
                        println("Creating request")
                        def template = new File("src/dk/medicinkortet/xmlschema/dokuwikitemplate_data.xml").text
                        def templateStart = new File("src/dk/medicinkortet/xmlschema/dokuwikitemplate_start.xml").text
                        def dokuwikiid = properties['infile'].substring(0, properties['infile'].length() - 10)
                        def file = new File(properties['infile']).text

                        def messages = []
                        messages.add(templateStart.replace("\${dokuwikiid}", dokuwikiid))
                        for (def i = 0; i < file.length() / maxMessageLength; i++) {
                            messages.add(template.replace("\${dokuwikiid}", dokuwikiid).replace("\${html}", file.substring(i*maxMessageLength, Math.min((i+1)*maxMessageLength, file.length()))))
                        }

                        println("Sending request")
                        def credentials = "${properties['dokuwiki.username']}:${properties['dokuwiki.password']}"
                        def encodedCredentials = Base64.getEncoder().encodeToString(credentials.getBytes())

                        for (message in messages) {
                            def post = new URL("https://wiki.fmk-teknik.dk/lib/exe/xmlrpc.php").openConnection()
                            post.setRequestMethod("POST")
                            post.setDoOutput(true)
                            post.setRequestProperty("Content-Type", "text/xml")
                            post.setRequestProperty("Authorization", "Basic " + encodedCredentials.toString())
                            println(post.getConnectTimeout())
                            post.getOutputStream().write(message.getBytes("UTF-8"))
                            println(post.getContentLengthLong())
                            def postRC = post.getResponseCode()
                            println(postRC)
                            if (postRC.equals(200)) {
                                println(post.getInputStream().getText())
                            } else {
                                println(post.getErrorStream().getText())
                            }
                        }
                    ]]></source>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>