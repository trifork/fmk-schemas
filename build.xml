<?xml version="1.0"?>
<!-- the project element's name attribute will be used in the name of the module's jar file -->
<project name="medicinkortet-schema" xmlns:ivy="antlib:fr.jayasoft.ivy.ant" default="all" basedir=".">

	<property name="ivy.checksums" value=""/>
    <property name="sourceversion" value="1.8"/>
    <property name="targetversion" value="1.8"/>

    <property file="build.properties"/>
	<property file="build.jenkins.properties"/>
    <property name="medicinkortet-schemas" value="${basedir}" />
    <property name="ivy.settings.file" value="${basedir}/etc/ivy/fmk-ivyconf.xml" /> <!-- override ivy settings before importing trifork-common -->
    <property name="trifork-common" value="${basedir}/trifork-common"/>
	<import file="${trifork-common}/etc/build-common.xml"/>

    <property name="target.dir" value="${basedir}/target" />

    <property name="fmk-classes.target.jar" value="${target.dir}/fmk-schema-classes.jar" />
    <property name="fmk-sources.target.zip" value="${target.dir}/fmk-schema-source.zip" />

    <property name="idws.target.dir" value="${target.dir}/idws/target" />
    <property name="idws.work.dir" value="${target.dir}/idws/workdir" />
    <property name="idws.schemas" value="schemas-idws" />

    <property name="idws-xua.target.dir" value="${target.dir}/idwsxua/target" />
    <property name="idws-xua.work.dir" value="${target.dir}/idwsxua/workdir" />

    	<property name="standard.target.dir" value="${target.dir}/standard/target" />
    <property name="standard.work.dir" value="${target.dir}/standard/workdir" />

    <path id="classpath">
        <fileset dir="lib/build">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="${build.dir}"/>
        <pathelement location="${resources.dir}"/>
        <pathelement location="${externalresources.dir}"/>
    </path>

	<condition property="os.family" value="mac">
        <os family="mac"/>
    </condition>
    <condition property="os.family" value="windows">
        <os family="windows"/>
    </condition>
	<condition property="os.family" value="linux">
        <os family="unix"/>
	</condition>

	<target name="publish" depends="clean, all, publish-from-jenkins"/>

	<target name="all" depends="clean, all-idws, all-idws-xua, all-standard, build-admin-jar, build-testtool-jar,  medicinecard_dist_zips"/>
	<target name="all-standard" depends="resolve-build, organize-schemas, generate, generate-namespace-oracle"/>
    <target name="all-idws" depends="resolve-build, organize-schemas_idws"/>
    <target name="all-idws-xua" depends="resolve-build, organize-schemas_idws-xua"/>

    <target name="generate-namespace-oracle" depends="compile">
        <java classpathref="classpath" failonerror="true"
        	classname="dk.medicinkortet.notproduktion.namespaceoracle.NamespaceOracleGenerator"/>
    </target>

    <fileset id="schemas_excluding_specialized_schemas" dir="etc">
        <include name="schemas/**"/>
        <include name="wsdl/*_Idws_*.wsdl"/>
        <!-- Exclude specialized versions of XSDs -->
        <exclude name="schemas/2008/06/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" />
        <exclude name="schemas/2008/06/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"/>
        <exclude name="schemas/2008/06/01/xmldsig-core-schema.xsd"/>
        <exclude name="schemas/2008/06/01/saml.xsd"/>
        <exclude name="schemas/2008/06/01/ws-trust-specialized.xsd"/>
        <exclude name="schemas/2008/06/01/wsa-specialized.xsd"/>
    </fileset>

    <fileset id="schemas_excluding_idws_schemas" dir="etc">
        <include name="schemas/**"/>
        <include name="wsdl/**"/>
        <!--<exclude name="schemas/idws/**"/>-->
        <include name="wsdl/*_Idws_*.wsdl"/>
    </fileset>

    <target name="filter-specialized-xsds">
        <copy todir="${idws.work.dir}/etc" flatten="false" description="Adding non-specialized schemas to ${idws.work.dir}/etc/schemas">
            <fileset refid="schemas_excluding_specialized_schemas"/>
        </copy>
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_01_01.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_01_01_E1.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_01_01_E2.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_01_01_E4.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_01_01_E5.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
    	<replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_06_01.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_06_01_E2.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_06_01_E3.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
        <replace file="${idws.work.dir}/etc/wsdl/MedicineCard_Idws_2015_06_01_E5.wsdl"
                 token="/${idws.schemas}/" value="/schemas/"
                 description="Fix paths to referenced schemas"
                />
    </target>

    <target name="filter-idws-xsds">
        <copy todir="${standard.work.dir}/etc" flatten="false">
            <fileset refid="schemas_excluding_idws_schemas"/>
        </copy>
    </target>

    <target name="filter-xsds-for-idws-xua">
        <copy todir="${idws-xua.work.dir}/etc" flatten="false" description="Adding non-specialized schemas to ${idws-xua.work.dir}/etc/schemas">
            <fileset refid="schemas_excluding_specialized_schemas"/>
        </copy>
    </target>
	
	<target name="organize-schemas_idws-xua" depends="compile, filter-xsds-for-idws-xua" >
        <mkdir dir="${idws-xua.work.dir}"  />
        <mkdir dir="${idws-xua.target.dir}/wsdl"  />

        <organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01"/>
        <organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E1"/>
        <!--organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E2"-->
        <!--organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E4"-->
        <!--organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01"-->
        <!--organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E2"-->
        <!--organize-idws-xua-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E3"-->

        <organize-idws-xua-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01"/>
        <!--organize-idws-xua-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01_E2"-->

        <!--organize-idws-xua-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01"-->
        <organize-idws-xua-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E1"/>
        <!--organize-idws-xua-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E2"-->
        <!--organize-idws-xua-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01"-->
        <!--organize-idws-xua-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01_E2"-->

        <copy todir="${idws-xua.target.dir}">
            <fileset dir="${idws-xua.target.dir}/gensrc/META-INF" includes="schemas/**"/>
            <fileset dir="${idws-xua.work.dir}/etc" includes="schemas/**/*.dtd"/>
        </copy>

        <zip destfile="${target.dir}/fmk-schema-idws-xua.zip"
             basedir="${idws-xua.target.dir}"
             includes="schemas/**, wsdl/**" />
    </target>

    <macrodef name="organize-idws-xua-schemas-macro">
        <attribute name="versiondate"/>
        <attribute name="wsdlname"/>

        <sequential>
            <java classname="dk.medicinkortet.xmlschema.SchemaLoader" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${idws-xua.work.dir}">
                <classpath>
                    <path location="${build.dir}"/>
                    <fileset dir="lib/build" excludes="*gwt*"/>
                </classpath>
                <sysproperty key="target.dir" value="${idws-xua.target.dir}" />
                <sysproperty key="VersionDate" value="Idws_Xua_@{versiondate}"/>
                <sysproperty key="WsdlName" value="@{wsdlname}"/>
            </java>
            <copy todir="${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}">
                <fileset dir="${idws-xua.work.dir}/etc" includes="schemas/**/*.dtd"/>
            </copy>
            <!-- Move wsdl one level down so that it's includes will work -->
        	<echo message="Moving ${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}/@{wsdlname}_Idws_Xua_@{versiondate}.wsdl -> ${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}/wsdl"/> 
            <move verbose="true" todir="${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}/wsdl">
                <fileset file="${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}/@{wsdlname}_Idws_Xua_@{versiondate}.wsdl"/>
            </move>
            <zip destfile="${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}-collection.zip" basedir="${idws-xua.target.dir}/wsdl/@{wsdlname}_Idws_Xua_@{versiondate}"/>
        </sequential>
    </macrodef>

	   <target name="organize-schemas_idws" depends="compile, filter-specialized-xsds" >
	        <mkdir dir="${idws.work.dir}"  />
	        <mkdir dir="${idws.target.dir}/wsdl"  />

	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E1"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E2"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E4"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E5"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E2"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E3"/>
	        <organize-idws-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E5"/>

	        <organize-idws-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01"/>
	        <organize-idws-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01_E2"/>
           <organize-idws-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01_E5"/>

	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01"/>
	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E1"/>
	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E2"/>
	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E5"/>
	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01"/>
	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01_E2"/>
	        <organize-idws-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01_E5"/>

	        <copy todir="${idws.target.dir}">
	            <fileset dir="${idws.target.dir}/gensrc/META-INF" includes="schemas/**"/>
	            <fileset dir="${idws.work.dir}/etc" includes="schemas/**/*.dtd"/>
	        </copy>

	        <zip destfile="${target.dir}/fmk-schema-idws.zip"
	             basedir="${idws.target.dir}"
	             includes="schemas/**, wsdl/**" />
	    </target>

	    <macrodef name="organize-idws-schemas-macro">
	        <attribute name="versiondate"/>
	        <attribute name="wsdlname"/>

	        <sequential>
	            <java classname="dk.medicinkortet.xmlschema.SchemaLoader" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${idws.work.dir}">
	                <classpath>
	                    <path location="${build.dir}"/>
	                    <fileset dir="lib/build" excludes="*gwt*"/>
	                </classpath>
	                <sysproperty key="target.dir" value="${idws.target.dir}" />
	                <sysproperty key="VersionDate" value="Idws_@{versiondate}"/>
	                <sysproperty key="WsdlName" value="@{wsdlname}"/>
	            </java>
	            <copy todir="${idws.target.dir}/wsdl/@{wsdlname}_Idws_@{versiondate}">
	                <fileset dir="${idws.work.dir}/etc" includes="schemas/**/*.dtd"/>
	            </copy>
	            <zip destfile="${idws.target.dir}/wsdl/@{wsdlname}_Idws_@{versiondate}-collection.zip" basedir="${idws.target.dir}/wsdl/@{wsdlname}_Idws_@{versiondate}"/>
	        </sequential>
	    </macrodef>

    <macrodef name="organize-schemas-macro">
        <attribute name="versiondate"/>
        <attribute name="wsdlname"/>
        <attribute name="targetdir" default="${standard.target.dir}"/>
        <attribute name="destfile" default="${standard.target.dir}/wsdl/@{wsdlname}_@{versiondate}-collection.zip"/>
        <attribute name="basedir" default="${standard.target.dir}/wsdl/@{wsdlname}_@{versiondate}"/>

        <sequential>
            <java classname="dk.medicinkortet.xmlschema.SchemaLoader" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${standard.work.dir}">
                <classpath>
                    <path location="${build.dir}"/>
                    <fileset dir="lib/build" excludes="*gwt*"/>
                </classpath>
                <sysproperty key="target.dir" value="@{targetdir}"/>
                <sysproperty key="VersionDate" value="@{versiondate}"/>
                <sysproperty key="WsdlName" value="@{wsdlname}"/>
            </java>
            <zip destfile="@{destfile}"
                 basedir="@{basedir}"/>
        </sequential>
    </macrodef>

	<target name="organize-schemas" depends="compile, filter-idws-xsds" >
		<mkdir dir="${standard.target.dir}/wsdl" />
		<mkdir dir="${standard.work.dir}" />

        <java classname="dk.medicinkortet.xmlschema.SchemaLoader" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${standard.work.dir}">
            <classpath>
                <path location="${build.dir}"/>
                <fileset dir="lib/build" excludes="*gwt*"/>
            </classpath>
            <sysproperty key="target.dir" value="${standard.target.dir}"/>
            <sysproperty key="WsdlName" value="Advis"/>
        </java>
        <zip destfile="${standard.target.dir}/wsdl/Advis-collection.zip"
             basedir="${standard.target.dir}/wsdl/Advis"/>

        <java classname="dk.medicinkortet.xmlschema.SchemaLoader" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${standard.work.dir}">
            <classpath>
                <path location="${build.dir}"/>
                <fileset dir="lib/build" excludes="*gwt*"/>
            </classpath>
            <sysproperty key="target.dir" value="${standard.target.dir}"/>
            <sysproperty key="WsdlName" value="ECPR2Advis"/>
        </java>
        <zip destfile="${standard.target.dir}/wsdl/ECPR2Advis-collection.zip"
             basedir="${standard.target.dir}/wsdl/ECPR2Advis"/>

        <organize-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01"/>
        <organize-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01_E2"/>
        <organize-schemas-macro wsdlname="EffectuationOrdering" versiondate="2015_01_01_E5"/>

        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01"/>
        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E1"/>
        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E2"/>
        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_01_01_E5"/>
        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01"/>
        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01_E2"/>
        <organize-schemas-macro wsdlname="PatientRegistration" versiondate="2015_06_01_E5"/>

        <organize-schemas-macro wsdlname="DumpRestore" versiondate="2013_01_01"/>
        <organize-schemas-macro wsdlname="DumpRestore" versiondate="2019_09_01"/>

        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E1"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E2"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E4"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_01_01_E5"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E2"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E3"/>
        <organize-schemas-macro wsdlname="MedicineCard" versiondate="2015_06_01_E5"/>

		<copy todir="${standard.target.dir}">
			<fileset dir="${standard.target.dir}/gensrc/META-INF" includes="schemas/**"/>
		</copy>
		<copy todir="${standard.target.dir}/schemas">
			<fileset dir="${standard.work.dir}/etc/schemas">
				<exclude name="sdsd"/>
			</fileset>
		</copy>
        <zip destfile="${target.dir}/fmk-schema.zip"
             basedir="${standard.target.dir}"
             includes="schemas/**, wsdl/**" />
	</target>

    <macrodef name="dist_zips-macro">
        <attribute name="version"/>
        <attribute name="version-yymmdd"/>
        <attribute name="file" default="${target.dir}/wsdl/MedicineCard_@{version-yymmdd}-collection-dist.zip"/>
        <attribute name="file-inline" default="${target.dir}/wsdl/MedicineCard-inline_@{version-yymmdd}-collection-dist.zip"/>
        <sequential>
            <zip destfile="@{file}" comment="releasedate ${DSTAMP}"
                 description="Dist collection for MedicineCard @{version-yymmdd} (@{version})"
                 update="false"
                 basedir="${standard.target.dir}/wsdl" includes="MedicineCard*@{version-yymmdd}-collection.zip"/>
            <zip destfile="@{file}" comment="releasedate ${DSTAMP}"
                 description="Dist collection for MedicineCard @{version-yymmdd} (@{version})"
                 update="true"
                 basedir="${idws.target.dir}/wsdl" includes="MedicineCard*@{version-yymmdd}-collection.zip"/>
            <!-- Pack inlined wsdl-files -->
            <zip destfile="@{file-inline}" comment="releasedate ${DSTAMP}"
                 description="Dist collection for inlined @{version-yymmdd} MedicineCard wsdl files (@{version})"
                 update="false"
                 basedir="${standard.target.dir}/wsdl" includes="MedicineCard-inline*_@{version-yymmdd}.wsdl"/>
            <zip destfile="@{file-inline}" comment="releasedate ${DSTAMP}"
                 update="true"
                 basedir="${idws.target.dir}/wsdl" includes="MedicineCard-inline*_@{version-yymmdd}.wsdl"/>
        </sequential>
    </macrodef>

	
    <target name="medicinecard_dist_zips" depends="organize-schemas, organize-schemas_idws">

        <mkdir dir="${target.dir}/wsdl"/>

        <!-- Dist collection for Advis -->
        <property name="advis_dist_file" value="${target.dir}/wsdl/Advis-collection-dist.zip"/>
           <zip destfile="${advis_dist_file}"
                 description="Dist collection for Advis"
                 update="false"
                 basedir="${standard.target.dir}/wsdl" includes="Advis*-collection.zip"/>

        <!-- Dist collection for eCPR2-Advis -->
        <property name="ecpr2_advis_dist_file" value="${target.dir}/wsdl/eCPR2-Advis-collection-dist.zip"/>
           <zip destfile="${ecpr2_advis_dist_file}"
                 description="Dist collection for Advis for eCPR2"
                 update="false"
                 basedir="${standard.target.dir}/wsdl" includes="ECPR2Advis*-collection.zip"/>

        <dist_zips-macro version-yymmdd="2013_06_01" version="1.4.2"/>
        <dist_zips-macro version-yymmdd="2015_01_01" version="1.4.4"/>
        <dist_zips-macro version-yymmdd="2015_01_01_E1" version="1.4.4.E1"/>
        <dist_zips-macro version-yymmdd="2015_01_01_E2" version="1.4.4.E2"/>
        <dist_zips-macro version-yymmdd="2015_01_01_E4" version="1.4.4.E4"/>
        <dist_zips-macro version-yymmdd="2015_01_01_E5" version="1.4.4.E5"/>
        <dist_zips-macro version-yymmdd="2015_06_01" version="1.4.6"/>
        <dist_zips-macro version-yymmdd="2015_06_01_E2" version="1.4.6.E2"/>
        <dist_zips-macro version-yymmdd="2015_06_01_E3" version="1.4.6.E3"/>
        <dist_zips-macro version-yymmdd="2015_06_01_E5" version="1.4.6.E5"/>

        <!-- Collection of all collections -->
        <zip destfile="${target.dir}/fmk-schema-dist.zip"
             description="All dist files for MedicineCard"
             update="false"
             basedir="${target.dir}/wsdl" includes="MedicineCard*.zip"
                />


    </target>


    <target name="axis-init" depends="init">
        <tstamp />
        <mkdir dir="target/build"/>
        <mkdir dir="target/gen/src"/>
    </target>

    <target name="check-generate" >
        <available file="${fmk-classes.target.jar}" property="generated_files_present"/>
    </target>

    <target name="set-codegen-encoding-property">
        <!-- if file.encoding has been set as a jvmarg e.g. via ANT_OPTS environment variable -->
        <condition property="codegen-encoding" value="${file.encoding}">
            <and>
                <isset property="file.encoding"/>
                <or>
                    <equals arg1="${file.encoding}" arg2="UTF-8" casesensitive="false"/>
                    <equals arg1="${file.encoding}" arg2="MacRoman" casesensitive="false"/>
                    <equals arg1="${file.encoding}" arg2="ISO-8859-1" casesensitive="false"/>
                </or>
            </and>
        </condition>
        <!-- else if platform is mac -->
        <condition property="codegen-encoding" value="MacRoman">
            <os family="mac"/>
        </condition>
        <!-- else -->
        <property name="codegen-encoding" value="ISO-8859-1"/>
        <echo>codegen-encoding set to '${codegen-encoding}'</echo>
    </target>

    <target name="build-admin-jar" >
        <property name ="target.admin.dir" value="${target.dir}/admin"/>
        <copy todir="${target.admin.dir}/schemas">
            <fileset dir="./etc/admin-schemas"/>
        </copy>

        <zip destfile="${target.dir}/fmk-schema-admin.zip" >
            <fileset dir="${target.admin.dir}">
                <include name="schemas/**/*.xsd"/>
            </fileset>
        </zip>

        <mkdir dir="${target.admin.dir}/src"/>

        <exec executable="xjc">
            <arg value="${target.dir}/admin/schemas"/>
            <arg value="-d"/>
            <arg value="${target.admin.dir}/src"/>
            <arg value="-p"/>
            <arg value="dk.medicinkortet.rest.resources.jaxb.admin"/>
        </exec>

        <mkdir dir="${target.admin.dir}/classes"/>
        <javac debug="true" destdir="${target.admin.dir}/classes" encoding="UTF-8">
            <src path="${target.admin.dir}/src"/>
        </javac>

        <jar basedir="${target.admin.dir}/classes" destfile="${target.dir}/fmk-schema-admin-classes.jar">
            <fileset dir="${target.admin.dir}/classes">
                <include name="**/*.class"/>
            </fileset>
        </jar>
    </target>

    <target name="build-testtool-jar" >
        <property name ="target.testtool.dir" value="${target.dir}/testtool"/>
        <copy todir="${target.testtool.dir}/schemas">
            <fileset dir="./etc/testtool-schemas"/>
        </copy>

        <zip destfile="${target.dir}/fmk-schema-testtool.zip" >
            <fileset dir="${target.testtool.dir}">
                <include name="schemas/**/*.xsd"/>
            </fileset>
        </zip>

        <mkdir dir="${target.testtool.dir}/src"/>

        <exec executable="xjc">
            <arg value="${target.dir}/testtool/schemas"/>
            <arg value="-d"/>
            <arg value="${target.testtool.dir}/src"/>
            <arg value="-p"/>
            <arg value="dk.medicinkortet.rest.resources.jaxb.testtool"/>
        </exec>

        <mkdir dir="${target.testtool.dir}/classes"/>
        <javac debug="true" destdir="${target.testtool.dir}/classes" encoding="UTF-8">
            <src path="${target.testtool.dir}/src"/>
        </javac>

        <jar basedir="${target.testtool.dir}/classes" destfile="${target.dir}/fmk-schema-testtool-classes.jar">
            <fileset dir="${target.testtool.dir}/classes">
                <include name="**/*.class"/>
            </fileset>
        </jar>
    </target>

     <target name="dependencytree">
        <ivy:dependencytree />
    </target>

    <target name="generate" depends="set-codegen-encoding-property, check-generate, axis-init, resolve-build" unless="generated_files_present">
        <taskdef name="codegen" classname="org.apache.axis2.tool.ant.AntCodegenTask" classpathref="classpath" />
        <mkdir dir="${standard.target.dir}/genclasses"/>
        <delete dir="${standard.target.dir}/gentestsrc"/>
        <mkdir dir="${standard.target.dir}/gentestsrc-tmp"/>

        <!-- IMPORTANT: whenever a new <codegen> element regarding a new wsdl-file is added to this section, remember to add an <exec>-element validating the wsdl in the "validate-wsdl" target below -->
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_01_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_01_01_E1.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_01_01_E2.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_01_01_E5.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_06_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_06_01_E2.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/PatientRegistration-inline_2015_06_01_E5.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_01_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_01_01_E1.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_01_01_E2.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_01_01_E4.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_01_01_E5.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_06_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_06_01_E2.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_06_01_E3.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/MedicineCard-inline_2015_06_01_E5.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/EffectuationOrdering-inline_2015_01_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
    	<codegen wsdlfilename="${standard.target.dir}/wsdl/EffectuationOrdering-inline_2015_01_01_E2.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/EffectuationOrdering-inline_2015_01_01_E5.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/DumpRestore-inline_2013_01_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <codegen wsdlfilename="${standard.target.dir}/wsdl/DumpRestore-inline_2019_09_01.wsdl" output="${standard.target.dir}/gentestsrc-tmp" unpackClasses="true" serverSide="false" databindingname="xmlbeans"/>
        <!-- IMPORTANT: whenever a new <codegen> element regarding a new wsdl-file is added to this section, remember to add an <exec>-element validating the wsdl in the "validate-wsdl" target below -->

        <copy todir="${standard.target.dir}/gentestsrc" encoding="${codegen-encoding}" outputencoding="UTF-8">
            <fileset dir="${standard.target.dir}/gentestsrc-tmp" includes="**/*.java"/>
        </copy>
        <move todir="${standard.target.dir}/gentestsrc">
            <fileset dir="${standard.target.dir}/gentestsrc-tmp" excludes="**/*.java"/>
        </move>

        <zip destfile="${fmk-sources.target.zip}">
            <fileset dir="${standard.target.dir}/gentestsrc/src" />
            <fileset dir="${standard.target.dir}/gentestsrc/resources" />
        </zip>

        <javac classpathref="classpath" debug="true" source="${sourceversion}" target="${targetversion}" destdir="${standard.target.dir}/genclasses" fork="true" includeantruntime="false" memorymaximumsize="1024m" encoding="UTF-8">
            <src path="${standard.target.dir}/gentestsrc/src"/>
        </javac>
        <jar basedir="${standard.target.dir}/gentestsrc/resources" destfile="${fmk-classes.target.jar}">
            <fileset dir="${standard.target.dir}/gentestsrc/resources">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${standard.target.dir}/genclasses">
                <include name="**/*.class"/>
            </fileset>
        </jar>
    </target>

    <target name="doValidateDokuWikiXML">
        <java classname="dk.medicinkortet.notproduktion.validateWikiExamples.WikiSitemapValidator" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${standard.work.dir}">
            <classpath>
                <path location="${build.dir}"/>
                <path location="${standard.target.dir}/gensrc"/>
                <fileset dir="lib/build" excludes="*gwt*"/>
            </classpath>
            <arg value="http://wiki.fmk.netic.dk/doku.php?id=fmk:1.4.6:fmk_1.4.6_snitflade&amp;do=index"/> <!-- Sitemap with 1.4.6 context expanded -->
            <arg value="http://www.dkma.dk/medicinecard/xml.schema/2015/06/01"/>                       <!-- Namespace for 1.4.6 which will be added to the XML snippets -->
        </java>
    </target>

    <target name="validateDokuWikiXML" depends="organize-schemas, doValidateDokuWikiXML"/>

    <target name="validateDokuWikiXML-1-4-4" depends="organize-schemas">
        <java classname="dk.medicinkortet.notproduktion.validateWikiExamples.WikiSitemapValidator" fork="true" failonerror="true" jvmargs="-Xmx1024m" dir="${standard.work.dir}">
            <classpath>
                <path location="${build.dir}"/>
                <path location="${standard.target.dir}/gensrc"/>
                <fileset dir="lib/build" excludes="*gwt*"/>
            </classpath>
            <arg value="http://wiki.fmk.netic.dk/doku.php?id=fmk:1.4.4:fmk_1.4.4_snitflade&amp;do=index"/> <!-- Sitemap with 1.4.4 context expanded -->
            <arg value="http://www.dkma.dk/medicinecard/xml.schema/2015/01/01"/>                       <!-- Namespace for 1.4.4 which will be added to the XML snippets -->
        </java>
    </target>

    <target name="clean">
        <delete dir="build"/>
        <delete dir="${target.dir}"/>
        <delete dir="gensrc"/>
        <delete dir="lib/build"/>
        <delete dir="lib/test"/>
    </target>
	
    
	<property name="paramprefix" value="-"/>
	
    <condition property="paramprefix" value="/">
        <isset property="windows"/>
    </condition>
	
	
	
    <macrodef name="validatewsdl-macro">
        <attribute name="wsdlfilename"/>
		<sequential>
			<exec executable="wsdl" errorproperty="error_@{wsdlfilename}" resultproperty="result_@{wsdlfilename}">
				<arg line="${paramprefix}nologo"/>
				<arg line="${standard.target.dir}/wsdl/@{wsdlfilename}.wsdl"/>
				<arg line="${paramprefix}out:@{wsdlfilename}.cs"/>
			</exec>
			<fail message="WSDL-valideringen er fejlet:${error_@{wsdlfilename}} Hvis wsdl.exe ikke har returneret en sigende fejlmeddelelse men kun efterladt et stracktrace, se da https://wall.trifork.com/display/fmk/WSDL-validering">
				<condition>
					<not>
						<equals arg1="${result_@{wsdlfilename}}" arg2="0"/>
					</not>
			     </condition>
			</fail>
    	</sequential>
    </macrodef>
	
	
	 <macrodef name="validateidwswsdl-macro">
	        <attribute name="wsdlfilename"/>
			<sequential>
				<exec executable="wsdl" errorproperty="error_@{wsdlfilename}" resultproperty="result_@{wsdlfilename}">
					<arg line="${paramprefix}nologo"/>
					<arg line="${idws.target.dir}/wsdl/@{wsdlfilename}.wsdl"/>
					<arg line="${paramprefix}out:@{wsdlfilename}.cs"/>
				</exec>
				<fail message="WSDL-valideringen er fejlet:${error_@{wsdlfilename}} Hvis wsdl.exe ikke har returneret en sigende fejlmeddelelse men kun efterladt et stracktrace, se da https://wall.trifork.com/display/fmk/WSDL-validering">
					<condition>
						<not>
							<equals arg1="${result_@{wsdlfilename}}" arg2="0"/>
						</not>
				     </condition>
				</fail>
	    	</sequential>
	    </macrodef>
	

	<target name="validate-all-wsdl">
		<mkdir dir="cssrc"/>
		<apply executable="wsdl" relative="true" dir="${standard.target.dir}/wsdl" verbose="true" failonerror="true"> <!-- errorproperty="error_@{wsdlfilename}" resultproperty="result_@{wsdlfilename}"  -->
			<fileset dir="${standard.target.dir}/wsdl" includes="*.wsdl" excludes="${standard.target.dir}/wsdl/Advis-inline.wsdl"></fileset>
			<arg value="${paramprefix}nologo"/>
			<arg value="${paramprefix}verbose"/>
			<targetfile/>
			 <mapper type="regexp" from="(.*)" to="${paramprefix}out:../../../../cssrc/\1.cs" />
		</apply>
		<!-- Hvis wsdl.exe ikke har returneret en sigende fejlmeddelelse men kun efterladt et stracktrace, se da https://wall.trifork.com/display/fmk/WSDL-validering" -->
		<apply executable="wsdl" relative="true" dir="${idws.target.dir}/wsdl" verbose="true" failonerror="true" >
			<fileset dir="${idws.target.dir}/wsdl" includes="*.wsdl"></fileset>
			<arg value="${paramprefix}nologo"/>
			<arg value="${paramprefix}verbose"	/>
			<targetfile/>
			 <mapper type="regexp" from="(.*)" to="${paramprefix}out:../../../../cssrc/\1.cs" />
		</apply>
		<!-- Hvis wsdl.exe ikke har returneret en sigende fejlmeddelelse men kun efterladt et stracktrace, se da https://wall.trifork.com/display/fmk/WSDL-validering" -->
	</target>
			
	<target name="validate-wsdl">
		<validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_01_01"/>
        <validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_01_01_E1"/>
        <validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_01_01_E2"/>
        <validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_01_01_E5"/>
		<validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_06_01"/>
		<validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_06_01_E2"/>
		<validatewsdl-macro wsdlfilename="PatientRegistration-inline_2015_06_01_E5"/>

		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_01_01"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_01_01_E1"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_01_01_E2"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_01_01_E4"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_01_01_E5"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_06_01"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_06_01_E2"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_06_01_E3"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_2015_06_01_E5"/>

		<!--<validatewsdl-macro wsdlfilename="MedicineCard-inline_Idws_2015_01_01"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_Idws_2015_01_01_E1"/>
		<validatewsdl-macro wsdlfilename="MedicineCard-inline_Idws_2015_06_01"/-->
                
		<validatewsdl-macro wsdlfilename="EffectuationOrdering-inline_2015_01_01"/>
		<validatewsdl-macro wsdlfilename="EffectuationOrdering-inline_2015_01_01_E2"/>
        <validatewsdl-macro wsdlfilename="EffectuationOrdering-inline_2015_01_01_E5"/>
		
		<validateidwswsdl-macro wsdlfilename="EffectuationOrdering-inline_Idws_2015_01_01"/>
		<validateidwswsdl-macro wsdlfilename="EffectuationOrdering-inline_Idws_2015_01_01_E2"/>
        <validateidwswsdl-macro wsdlfilename="EffectuationOrdering-inline_Idws_2015_01_01_E5"/>

		<validatewsdl-macro wsdlfilename="DumpRestore-inline_2013_01_01"/>
        <validatewsdl-macro wsdlfilename="DumpRestore-inline_2019_08_01"/>
	</target>
	
	<target name="generate-nsf-wsdl" depends="generate">
		<xslt in="${standard.target.dir}/wsdl/MedicineCard-inline_2015_06_01.wsdl" out="${target.dir}/NSFSubset-MedicineCard-inline_2015_06_01.wsdl" style="src/dk/medicinkortet/xmlschema/nsf_extracttypes.xsl"></xslt>	
	</target>
	
	<target name="remove-duplicates-in-nsf-wsdl" depends="generate-nsf-wsdl">
		<xslt in="${target.dir}/NSFSubset-MedicineCard-inline_2015_06_01.wsdl" out="${target.dir}/NSFSubset-UniqueTypes-MedicineCard-inline_2015_06_01.wsdl" style="src/dk/medicinkortet/xmlschema/nsf_uniquetypes.xsl"></xslt>	
	</target>

	<target name="generate-nsf-html" depends="remove-duplicates-in-nsf-wsdl">
		<xslt in="${target.dir}/NSFSubset-UniqueTypes-MedicineCard-inline_2015_06_01.wsdl" out="${target.dir}/NSF-MedicineCard_2015_06_01.html" style="src/dk/medicinkortet/xmlschema/nsfdoc.xsl"></xslt>	
	</target>

	<target name="generate-fmk-html">
		<xslt in="${inlinefilename}" out="${inlinefilename}.html" style="src/dk/medicinkortet/xmlschema/fmkdoc.xsl"></xslt>	
	</target>
	
	<!-- Fra https://github.com/antlibs/ant-http -->
	 <taskdef name="http" classname="org.missinglink.ant.task.http.HttpClientTask">
	    <classpath location="./ant-http-1.1.4.jar"/>
	  </taskdef>
	
	<target name="post-to-dokuwiki">
		<loadfile property="html" srcFile="${infolder}/${infile}"/>
		<script language="javascript">
					var substring = project.getProperty("infile").substring(0, project.getProperty("infile").length() - 10);
					project.setProperty("dokuwikiid", substring);
				</script>
		<loadfile property="xmlrpc" srcFile="src/dk/medicinkortet/xmlschema/dokuwikitemplate.xml">
			<filterchain>
		        <expandproperties/>
		    </filterchain>
		</loadfile>
		<echo message="Posting to fmk:${dokuwikiid}:feltbeskrivelser"/>
		<http url="https://wiki.fmk.netic.dk/lib/exe/xmlrpc.php" method="POST" printResponse="true" printResponseHeaders="true" printRequest="false" printRequestHeaders="true" setContentLengthHeader="true">
			<entity value="${xmlrpc}" binary="false"/>
			<credentials username="${dokuwiki.username}" password="${dokuwiki.password}"/>
			<headers>
			    <header name="Content-Type" value="text/xml"/>
			</headers>
		</http>
	</target>
</project>
